<?xml version="1.0" encoding="utf-8"?>
<windows:ResizableTitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:windows="com.uralys.tribes.windows.*"
			   skinClass="com.uralys.tribes.skins.WindowSkin"
			   close="{closeWindow(true)}"
			   width="440"
			   height="420"
			   backgroundAlpha="0.7"
			   backgroundColor="#000000"
			   cornerRadius="15">
	<fx:Script>
		<![CDATA[
			//-----------------------------------------------------------------//

			import com.uralys.tribes.commons.Session;
			import com.uralys.tribes.commons.Translations;
			import com.uralys.tribes.entities.Message;
			import com.uralys.tribes.managers.GameManager;
			import com.uralys.tribes.pages.Board;
			
			import mx.collections.ArrayCollection;
			import mx.core.FlexGlobals;
			import mx.managers.PopUpManager;

			//-----------------------------------------------------------------//

			var messageToMarkAsReadUIDs:ArrayCollection = new ArrayCollection();
			var messageToDeleteUIDs:ArrayCollection = new ArrayCollection();
			var messageToArchiveUIDs:ArrayCollection = new ArrayCollection();
			
			//-----------------------------------------------------------------//

			public function closeWindow(manageMessages:Boolean = false):void
			{
				PopUpManager.removePopUp(this);
				if(!manageMessages)
					return;
				
				//---------------------------//
				
				var messagesToRemoveFromNews:ArrayCollection = new ArrayCollection();
				
				for each(var message:Message in Session.player.newMessages)
				{
					if(message.status == Message.READ){
						Session.player.readMessages.addItem(message);
						messagesToRemoveFromNews.addItem(message);
						messageToMarkAsReadUIDs.addItem(message.messageUID);
					}
				}
				
				for each(var messageToRemoveFromNews:Message in messagesToRemoveFromNews){
					Session.player.newMessages.removeItemAt(Session.player.newMessages.getItemIndex(messageToRemoveFromNews));
				}

				//---------------------------//

				if(messageToMarkAsReadUIDs.length > 0)
					GameManager.getInstance().markAsRead(messageToMarkAsReadUIDs);
				
				if(messageToArchiveUIDs.length > 0)
					GameManager.getInstance().archiveMessages(messageToArchiveUIDs);
				
				if(messageToDeleteUIDs.length > 0)
					GameManager.getInstance().deleteMessages(messageToDeleteUIDs);

			}
			
			//-----------------------------------------------------------------//
			
			public function refresh():void
			{
				//GameManager.getInstance().sendMessage(message.text);
			}

			//-----------------------------------------------------------------//
			
			private function deleteReadMessage():void{
				(readMessagesList.selectedItem as Message).status = Message.DELETED;
				
				messageToDeleteUIDs.addItem((readMessagesList.selectedItem as Message).messageUID);
				Session.player.readMessages.removeItemAt(Session.player.readMessages.getItemIndex((readMessagesList.selectedItem as Message)));
				
				readMessagesList.selectedItem = null;
			}

			private function deleteArchivedMessage():void{
				(archivedMessagesList.selectedItem as Message).status = Message.DELETED;
				
				messageToDeleteUIDs.addItem((archivedMessagesList.selectedItem as Message).messageUID);
				Session.player.archivedMessages.removeItemAt(Session.player.archivedMessages.getItemIndex((archivedMessagesList.selectedItem as Message)));
				
				archivedMessagesList.selectedItem = null;
			}
			
			private function archiveReadMessage():void
			{
				if(Session.player.archivedMessages.length == 20){
					FlexGlobals.topLevelApplication.message(Translations.MAX_ARCHIVE.getItemAt(Session.LANGUAGE) as String);
					return;
				}
				
				(readMessagesList.selectedItem as Message).status = Message.ARCHIVED;
				
				messageToArchiveUIDs.addItem((readMessagesList.selectedItem as Message).messageUID);
				Session.player.archivedMessages.addItem(readMessagesList.selectedItem as Message);
				Session.player.readMessages.removeItemAt(Session.player.readMessages.getItemIndex((readMessagesList.selectedItem as Message)));
				
				readMessagesList.selectedItem = null;
			}
			
		]]>
	</fx:Script>
	
	<s:Group width="100%" height="100%">
		
		
		<s:VGroup horizontalAlign="center" top="5" width="100%">
			<mx:SWFLoader source="{ImageContainer.LOADING}" 
						  visible="{Session.WAIT_FOR_SERVER}"/>
			<s:TabBar id="tabs" dataProvider="{viewstack}"
					  skinClass="com.uralys.tribes.skins.CustomTabBarSkin"/>
		</s:VGroup>
		
		<mx:ViewStack id="viewstack" 
					  width="100%" height="100%"
					  paddingTop="55"
					  paddingLeft="15"
					  paddingRight="15"
					  paddingBottom="15"
					  >
			
			<s:NavigatorContent label="{Translations.UNREAD.getItemAt(Session.LANGUAGE)} ({Session.player.newMessages.length})">
				<s:HGroup width="100%" height="100%"
						  horizontalAlign="center"
						  verticalAlign="middle">
					<s:List dataProvider="{Session.player.newMessages}"
							id="newMessagesList"
							height="90%"
							width="40%"
							selectionColor="#000101"
							rollOverColor="#000101"
							itemRenderer="com.uralys.tribes.renderers.MessageRenderer"
							skinClass="com.uralys.tribes.skins.CustomListSkin"/>
					<s:VGroup width="60%" height="100%"
							  horizontalAlign="center"
							  paddingTop="5">
						<s:Label text="{(newMessagesList.selectedItem as Message).date}"
								 color="#ffffff"/>
						<s:Label width="60%"
								 text="{(newMessagesList.selectedItem as Message).content}"
								 color="#ffffff"/>
					</s:VGroup>
				</s:HGroup>
			</s:NavigatorContent>
			<s:NavigatorContent label="{Translations.READ.getItemAt(Session.LANGUAGE)} ({Session.player.readMessages.length})">
				<s:HGroup width="100%" height="100%"
						  horizontalAlign="center"
						  verticalAlign="middle">
					<s:List dataProvider="{Session.player.readMessages}"
							id="readMessagesList"
							height="90%"
							width="40%"
							selectionColor="#000101"
							rollOverColor="#000101"
							itemRenderer="com.uralys.tribes.renderers.MessageRenderer"
							skinClass="com.uralys.tribes.skins.CustomListSkin"/>
					<s:VGroup width="60%" height="100%"
							  horizontalAlign="center"
							  paddingTop="5">
						<s:Label text="{(readMessagesList.selectedItem as Message).date}"
								 color="#ffffff"/>
						<s:Label width="60%"
								 text="{(readMessagesList.selectedItem as Message).content}"
								 color="#ffffff"/>
						<mx:Spacer height="100%"/>
						<s:HGroup width="100%" visible="{readMessagesList.selectedItem != null}">
							<s:Button skinClass="com.uralys.tribes.skins.CustomButtonSkin" 
									  label="{Translations.ARCHIVE.getItemAt(Session.LANGUAGE)}"
									  click="archiveReadMessage()"/>
							<mx:Spacer width="100%"/>
							<s:Button skinClass="com.uralys.tribes.skins.CustomButtonSkin"
									  label="{Translations.DELETE.getItemAt(Session.LANGUAGE)}"
									  click="deleteReadMessage()"/>
						</s:HGroup>
					</s:VGroup>
					
				</s:HGroup>
			</s:NavigatorContent>
			<s:NavigatorContent label="{Translations.ARCHIVES.getItemAt(Session.LANGUAGE)} ({Session.player.archivedMessages.length})">
				<s:HGroup width="100%" height="100%"
						  horizontalAlign="center"
						  verticalAlign="middle">
					<s:List dataProvider="{Session.player.archivedMessages}"
							id="archivedMessagesList"
							height="90%"
							width="40%"
							selectionColor="#000101"
							rollOverColor="#000101"
							itemRenderer="com.uralys.tribes.renderers.MessageRenderer"
							skinClass="com.uralys.tribes.skins.CustomListSkin"/>
					<s:VGroup width="60%" height="100%"
							  horizontalAlign="center"
							  paddingTop="5">
						<s:Label text="{(archivedMessagesList.selectedItem as Message).date}"
							 color="#ffffff"/>
						<s:Label width="60%"
							 text="{(archivedMessagesList.selectedItem as Message).content}"
							 color="#ffffff"/>
						<mx:Spacer height="100%"/>
						<s:HGroup width="100%" visible="{archivedMessagesList.selectedItem != null}">
							<mx:Spacer width="100%"/>
							<s:Button skinClass="com.uralys.tribes.skins.CustomButtonSkin"
									  label="{Translations.DELETE.getItemAt(Session.LANGUAGE)}"
									  click="deleteArchivedMessage()"/>
						</s:HGroup>
					</s:VGroup>
				</s:HGroup>
			</s:NavigatorContent>
		</mx:ViewStack>
	</s:Group>
	
</windows:ResizableTitleWindow>
