<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:renderers="com.uralys.tribes.renderers.*"
		 xmlns:components="com.uralys.tribes.components.*" 
		 xmlns:windows="com.uralys.tribes.windows.*" 
		 width="100%" height="100%"
		 creationComplete="initBoard()" 
		 >
	
	<fx:Script>
		<![CDATA[
			//---------------------------------------------------------------------------------------//
			
			import com.uralys.tribes.commons.Numbers;
			import com.uralys.tribes.commons.Session;
			import com.uralys.tribes.commons.Translations;
			import com.uralys.tribes.core.BoardClickAnalyser;
			import com.uralys.tribes.core.BoardDrawer;
			import com.uralys.tribes.core.Pager;
			import com.uralys.tribes.core.UnitMover;
			import com.uralys.tribes.entities.Cell;
			import com.uralys.tribes.entities.City;
			import com.uralys.tribes.entities.Game;
			import com.uralys.tribes.entities.Move;
			import com.uralys.tribes.entities.Player;
			import com.uralys.tribes.entities.Unit;
			import com.uralys.tribes.main.ImageContainer;
			import com.uralys.tribes.managers.GameManager;
			import com.uralys.tribes.renderers.Pawn;
			import com.uralys.tribes.skins.ClassicProgressBarSkin;
			import com.uralys.tribes.skins.CustomProgressTrackSkin;
			import com.uralys.utils.Utils;
			
			import mx.containers.TitleWindow;
			import mx.core.FlexGlobals;
			import mx.events.ItemClickEvent;
			
			//---------------------------------------------------------------------------------------//
			
			[Bindable] public var selectedCity:City;

			//----------------------------------------------------------//

			[Bindable] public var boardPositionX:int = 150;
			[Bindable] public var boardPositionY:int = 50;
			
			//----------------------------------------------------------//

			// set params est appelee avant creationComplete (initBoard())
			public function set params(args:Array):void
			{
				FlexGlobals.topLevelApplication.header.loginWindow.closeWindow();
				selectedCity = Session.player.cities.getItemAt(0) as City;
				trace("Board.set params : " + selectedCity);
				
				if(Session.player.name == "New Player"){
					showChangeName.play();
				}
			}
			
			//==============================================================================================================//
			// 	Game management
			
			private function initBoard():void
			{
				trace("Board.initBoard : " + selectedCity);
				Session.timer.start();
				
				if(selectedCity == null){
					FlexGlobals.topLevelApplication.message('GAME OVER ON THIS SERVER', 700);
					Session.GAME_OVER = true;
					
					selectedCity = new City();
					selectedCity.x = 100;
					selectedCity.y = 100;
					
					GameManager.getInstance().initMap(100, 100);
				}
				
				//------------------------------------------------------------//

				Session.board = this;
				placeBoard(selectedCity.x, selectedCity.y, false);
				
				GameManager.getInstance().refreshPlayerOnClientSide(Session.player);
			}
	
			//----------------------------------------------------------------------------------------//

			/**
			 * le BoardClickListener regarde si il y a une ville dans la case clickee et arrive ici
			 */ 
			public function showEnterCity(city:City):void
			{
				trace("SHOW ENTER CITY");
				if(Session.MOVE_A_UNIT){
					return;
				}
				
				for each(var cityInSession:City in Session.player.cities)
				{
					if(cityInSession.cityUID == city.cityUID){
						selectedCity = cityInSession;
						Session.CURRENT_CELL_SELECTED.city = cityInSession;
						trace("found selectedCity");
						break;
					}
				}
				
				// on calcule si ce n'a pas été fait avant
				GameManager.getInstance().refreshCityWorkersOnResources(false, selectedCity, false);
				
				var now:Number = new Date().getTime();
				if(selectedCity.beginTime < now){
					rightPanel.cellContent.enterCityButton.enabled = true;
					Session.timer.removeEventListener(TimerEvent.TIMER, setBuildingCityProgressBar);
				}
				else{
					rightPanel.cellContent.enterCityButton.enabled = false;
					Session.timer.addEventListener(TimerEvent.TIMER, setBuildingCityProgressBar);
				}
			}
				

			private function setBuildingCityProgressBar(event:TimerEvent = null):void
			{
				var now:Number = new Date().getTime();
				var millisRemaining:Number = selectedCity.beginTime - now; 
				var millisSpent:Number = Numbers.TIME_TO_BUILD_A_CITY - millisRemaining;
				
				if(millisRemaining <= 0){
					if(event != null){
						Session.timer.removeEventListener(TimerEvent.TIMER, setBuildingCityProgressBar);
						GameManager.getInstance().refreshPlayerOnServerSide(Session.player);
					}
				}
				else{
					var hours:int = millisRemaining/60/60/1000;
					var minutes:int = (millisRemaining-hours*60*60*1000)/60/1000;
					var secondes:int = (millisRemaining-hours*60*60*1000 - minutes*60*1000) /1000;
					
					rightPanel.cellContent.buildingCityProgessBar.setProgress( millisSpent, Numbers.TIME_TO_BUILD_A_CITY );
					rightPanel.cellContent.labelBuildingCity.text = (hours != 0 ? hours+" h " : '')+(minutes>9 ? "" : "0")+minutes+" mn "+(secondes>9 ? "" : "0")+secondes+' s';
					
					Session.timer.addEventListener(TimerEvent.TIMER, setBuildingCityProgressBar);
				}
			}
			
			//-----------------------------------------------------------//

			public function enterCity(event:MouseEvent):void
			{
				Session.INSIDE_A_CITY = true;
				cityGroup.cityForm.refreshCity();
				appearCity.play();
			}
			
			//======================================================================================//
			
			public function placeBoard(x:int, y:int, simulateMouseClick:Boolean = true):void
			{
				trace("placeBoard  : " + x + " | " + y);
				mapPositioner.x = Session.MAP_WIDTH/2 
					- Utils.getXPixel(x)
					- Utils.getLandWidth()/2;
				mapPositioner.y = Session.MAP_HEIGHT/2 
					- Utils.getYPixel(y)
					- Utils.getLandHeight()/2;
				trace("mapPositioner  : " + mapPositioner.x + " | " + mapPositioner.y);

				
				Session.CENTER_X = x;
				Session.CENTER_Y = y;
				
				Session.COORDINATE_X = x;
				Session.COORDINATE_Y = y;
				
				try{
					Session.CURRENT_CELL_SELECTED = Session.map[x][y];
				}catch(e:Error){};
				
				if(simulateMouseClick)
					BoardClickAnalyser.getInstance().simulateClick(); // simule le click sur la case x,y
			}

		]]>
	</fx:Script>
	
	<!-- ====================================================================================== -->
	
	<fx:Declarations>
		<s:Move id="appearCity"
				 xTo="0"
				 target="{cityGroup}"/>
		<s:Move id="hideCity"
				 xTo="2500"
				 target="{cityGroup}"/>
		
		
		<s:Move id="hideChangeName" target="{changeNameWindow}" xTo="-375"/>
		<s:Move id="showChangeName" target="{changeNameWindow}" xTo="{Session.APPLICATION_WIDTH/2 - changeNameWindow.width/2}"/>

		<s:Move id="hideCityChangeName" target="{changeCityNameWindow}" xTo="-375"/>
		<s:Move id="showCityChangeName" target="{changeCityNameWindow}" xTo="{Session.APPLICATION_WIDTH/2 - changeCityNameWindow.width/2}"/>

		<s:Move id="hidePlayerUnits" target="{playerUnits}" xTo="-600"/>
		<s:Move id="showPlayerUnits" target="{playerUnits}" xTo="0"/>
		
	</fx:Declarations>
	
	<!-- ====================================================================================== -->
	
	<s:Group id="main" width="{Session.APPLICATION_WIDTH}" height="{Session.APPLICATION_HEIGHT}">
		
		<s:Group width="{Session.MAP_WIDTH}" 
				 height="{Session.MAP_HEIGHT}"
				 verticalCenter="0"
				 horizontalCenter="0"
				 id="boardImage"
				 clipAndEnableScrolling="true"	  
				 useHandCursor="true">
			<s:Group id="mapLayer"
					 width="{Numbers.LAND_WIDTH*400}"
					 height="{Numbers.LAND_HEIGHT*400}"
					 x="{mapPositioner.x}"
					 y="{mapPositioner.y}"
					 mouseEnabled="false"
					 mouseChildren="false"
					 mouseEnabledWhereTransparent="false"/>
			<s:Group id="pawnLayer"
					 width="{Numbers.LAND_WIDTH*400}"
					 height="{Numbers.LAND_HEIGHT*400}"
					 x="{mapPositioner.x}"
					 y="{mapPositioner.y}"
					 mouseEnabled="false"
					 mouseChildren="false"
					 mouseEnabledWhereTransparent="false"/>
			<s:Group id="highlighters"
					 width="{Numbers.LAND_WIDTH*400}"
					 height="{Numbers.LAND_HEIGHT*400}"
					 x="{mapPositioner.x}"
					 y="{mapPositioner.y}"
					 mouseEnabled="false"
					 mouseChildren="true"
					 mouseEnabledWhereTransparent="false">
				
				<s:Image id="currentMouseHighLightNormal"
						  source="{ImageContainer.getImage(ImageContainer.HIGHLIGHT_BLANC)}"
						  visible="{!Session.MOVE_A_UNIT}"
						  x="{Session.COORDINATE_X * (Numbers.LAND_WIDTH - Numbers.LAND_WIDTH/4) * BoardDrawer.getInstance().scale}"
						  y="{Session.COORDINATE_Y * (Numbers.LAND_HEIGHT - Numbers.LAND_HEIGHT/2) * BoardDrawer.getInstance().scale}"
						  scaleX="{BoardDrawer.getInstance().scale}"
						  scaleY="{BoardDrawer.getInstance().scale}"
						  mouseEnabled="false"/>

				<s:Image id="currentMouseHighLight4UnitMoves"
						  source="{ImageContainer.getImage(ImageContainer.HIGHLIGHT_BLANC)}"
						  visible="{Session.MOVE_A_UNIT}"
						  x="{Session.COORDINATE_X * (Numbers.LAND_WIDTH - Numbers.LAND_WIDTH/4) * BoardDrawer.getInstance().scale}"
						  y="{Session.COORDINATE_Y * (Numbers.LAND_HEIGHT - Numbers.LAND_HEIGHT/2) * BoardDrawer.getInstance().scale}"
						  scaleX="{BoardDrawer.getInstance().scale}"
						  scaleY="{BoardDrawer.getInstance().scale}"
						  mouseEnabled="false"/>

				<s:Image id="currentSelectionHighLight"
						  source="{ImageContainer.getImage(ImageContainer.HIGHLIGHT_BLANC)}"
						  x="{Session.CURRENT_SELECTION_X * (Numbers.LAND_WIDTH - Numbers.LAND_WIDTH/4) * BoardDrawer.getInstance().scale}"
						  y="{Session.CURRENT_SELECTION_Y * (Numbers.LAND_HEIGHT - Numbers.LAND_HEIGHT/2) * BoardDrawer.getInstance().scale}"
						  scaleX="{BoardDrawer.getInstance().scale}"
						  scaleY="{BoardDrawer.getInstance().scale}"
						  mouseEnabled="false"/>
				
			</s:Group>
 		</s:Group>
		
		<s:Image source="{ImageContainer.BORDERS}"
				 x="{boardImage.x - 510}"
				 y="{boardImage.y - 220}"
				 />

		<s:Group width="{Session.MAP_WIDTH}" 
				 height="{Session.MAP_HEIGHT}"
				 verticalCenter="0"
				 horizontalCenter="0"
				 id="boardClickReceiver"
				 clipAndEnableScrolling="true"	  
				 useHandCursor="true">
			<s:Group id="mapPositioner" 
					 buttonMode="true"
					 width="{Numbers.LAND_WIDTH*400}"
					 height="{Numbers.LAND_HEIGHT*400}"
					 mouseDown="BoardClickAnalyser.getInstance().mouseDown(event)"
					 mouseMove="BoardClickAnalyser.getInstance().mouseMove(event)"
					 mouseUp="BoardClickAnalyser.getInstance().mouseUp(event)"/>
		</s:Group>
	</s:Group>
	
	<!-- =============================================================================================== -->
	
	<s:Image source="{ImageContainer.ARROW_RIGHT}" 
			 id="openPlayerUnitsButton" 
			 alpha="0.6"
			 click="{showPlayerUnits.play()}"
			 left="0"
			 top="300"/>
	
	<!-- ====================================================================================== -->
	
	<windows:PlayerUnits id="playerUnits" x="-600" y="{Session.HEADER_HEIGHT}"/>
	<windows:CityGroup id="cityGroup" x="2500" y="{Session.HEADER_HEIGHT}"
					   width="{Session.APPLICATION_WIDTH}"
					   height="{Session.APPLICATION_HEIGHT - Session.HEADER_HEIGHT - Session.FOOTER_HEIGHT}"
					   selectedCity="@{selectedCity}"/>

	<windows:LeftBoardPanel
				id="leftPanel"
				bottom="{Session.FOOTER_HEIGHT}"/>

	<windows:RightBoardPanel
				id="rightPanel"
				x="{Session.APPLICATION_WIDTH - rightPanel.width}"
				bottom="{Session.FOOTER_HEIGHT}"/>

	<windows:ChangeName id="changeNameWindow" x="-375" y="100" type="1"/>
	<windows:ChangeName id="changeCityNameWindow" x="-375" y="100" type="2"/>
	
</s:Group>
