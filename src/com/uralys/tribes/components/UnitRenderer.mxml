<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				xmlns:renderers="com.uralys.tribes.renderers.*"
				useHandCursor="true"
				buttonMode="true"
				contentBackgroundAlpha="0" xmlns:components="com.uralys.tribes.components.*"
				>
	
	<fx:Declarations>
		<s:Fade id="fade" alphaTo="0" duration="200"/>
		<s:Fade id="unfade" alphaTo="1" duration="200"/>
		
		<s:State name="waiting"/>
		<s:State name="shotEnabled"/>
		<s:State name="buildCityEnabled"/>
		<s:State name="reloading"/>
		<s:State name="moving"/>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import com.uralys.tribes.commons.Numbers;
			import com.uralys.tribes.commons.Session;
			import com.uralys.tribes.commons.Translations;
			import com.uralys.tribes.core.UnitMover;
			import com.uralys.tribes.entities.Unit;
			import com.uralys.tribes.main.ImageContainer;
			import com.uralys.tribes.managers.GameManager;
			import com.uralys.tribes.skins.CustomButtonSkin;
			import com.uralys.tribes.skins.WorkersProgressBarSkin;
			import com.uralys.tribes.skins.WorkersProgressTrackSkin;
			
			import mx.core.FlexGlobals;
			import mx.effects.easing.Quadratic;
			import mx.events.ItemClickEvent;
			
			//-------------------------------------------------------------------------------------//
			
 			private var _unit:Unit;
		
			[Bindable]
			public function get unit():Unit
			{
				return _unit;
			}
			
			public function set unit(value:Unit):void
			{
				_unit = value;
				refresh();
			}
			
			//-------------------------------------------------------------------------------------//

			[Bindable] private var nbActionsAvailable:int;
			
			//-------------------------------------------------------------------------------------//
			
			private function refresh():void
			{
				nbActionsAvailable = 1;
				
				if(unit.moves.length > 1)
				{
					setMoving();
					currentState = "moving";
				}
				else{
					if(unit.bows > 0 && unit.type == Unit.ARMY)
					{
						nbActionsAvailable ++;
						Session.timer.removeEventListener(TimerEvent.TIMER, setReloading);
						
						var now:Number = new Date().getTime();
						if(now - unit.lastShotTime > Numbers.BASE_TIME_FOR_SHOOTING)
							currentState = "shotEnabled";
						else{
							setReloading();
							currentState = "reloading";
						}
						
					}
					else if(Session.CURRENT_CELL_SELECTED.city == null 
						&& unit.mayBuildAcity()
						&& (Session.CURRENT_CELL_SELECTED.landOwner == null || unit.player.ally.allyUID == Session.CURRENT_CELL_SELECTED.landOwner.ally.allyUID)){
						currentState="buildCityEnabled"
					}
					else
						currentState = "waiting";
				}
			}
			
			//-------------------------------------------------------------------------------------//
			
			private function setMoving(event:TimerEvent = null):void
			{
				var now:Number = new Date().getTime();
				var millisRemaining:Number = unit.moves.getItemAt(0).timeTo - now;
				var millisSpent:Number = now - unit.moves.getItemAt(0).timeFrom;
				
				if(millisRemaining <= 0){
					if(event != null)
						refresh();
				}
				else{
					var minutes:int = millisRemaining/60/1000;
					var secondes:int = (millisRemaining - minutes*60*1000) /1000;
					
					movingProgressBar.setProgress( millisSpent, unit.moves.getItemAt(0).timeTo - unit.moves.getItemAt(0).timeFrom );
					movingProgressBar.label = Translations.MOVING.getItemAt(Session.LANGUAGE) + " : " +(minutes>9 ? "" : "0")+minutes+" mn "+(secondes>9 ? "" : "0")+secondes+' s';
					
					Session.timer.addEventListener(TimerEvent.TIMER, setMoving);
				}
			}
			
			private function setReloading(event:TimerEvent = null):void
			{
				var now:Number = new Date().getTime();
				var millisRemaining:Number = Numbers.BASE_TIME_FOR_SHOOTING + unit.lastShotTime - now;
				var millisSpent:Number = now - unit.lastShotTime;
				
				if(millisRemaining <= 0){
					if(event != null)
						refresh();
				}
				else{
					var minutes:int = millisRemaining/60/1000;
					var secondes:int = (millisRemaining - minutes*60*1000) /1000;
					
					shootProgressBar.setProgress( millisSpent, Numbers.BASE_TIME_FOR_SHOOTING );
					shootProgressBar.label = Translations.BOWS.getItemAt(Session.LANGUAGE) + " : " +(minutes>9 ? "" : "0")+minutes+" mn "+(secondes>9 ? "" : "0")+secondes+' s';
					
					Session.timer.addEventListener(TimerEvent.TIMER, setReloading);
				}
			}
			
			//-------------------------------------------------------------------------------------//
			
			private function goLeft(viewStack:ViewStack):void
			{
				if(viewStack.selectedIndex == 0)
					viewStack.selectedIndex = viewStack.numElements-1;
				else
					viewStack.selectedIndex --;

			}

			private function goRight(viewStack:ViewStack):void
			{
				if(viewStack.selectedIndex == viewStack.numElements-1)
					viewStack.selectedIndex = 0;
				else
					viewStack.selectedIndex ++;
				
			}
			
			//-------------------------------------------------------------------------------------//

			private function validateMoves():void{
				UnitMover.getInstance().validateUnitMoves(false);
				refresh();
			}

			private function cancel():void{
				UnitMover.getInstance().validateUnitMoves(true);
				refresh();
			}

			//-------------------------------------------------------------------------------------//
			
			private function moveUnit():void{
				currentState = "moving";
				UnitMover.getInstance().moveUnit(unit);
			}

			//-------------------------------------------------------------------------------------//

			private function shoot():void{
				unit.lastShotTime = new Date().getTime();
				refresh();
			}
			
			//-------------------------------------------------------------------------------------//
		
			private function buildCity():void
			{
				GameManager.getInstance().buildCity(unit);
			}

		]]>
	</fx:Script>
	
	<s:Group id="groupDetails" height="100" width="130">
		<s:Rect left="0" right="0" top="0" bottom="0" radiusX="5" radiusY="5">
			<s:fill>
				<s:SolidColor color="{unit.ownerStatus == Unit.PLAYER ? Numbers.colorPlayer : (unit.ownerStatus == Unit.ALLY ? Numbers.colorAlly  : Numbers.colorEnnemy)}" alpha="0.4"/>
			</s:fill>
		</s:Rect>
		<renderers:PlayerName player="{unit.player}" left="5"/>
		<s:Image source="{unit.type == Unit.ARMY ? ImageContainer.WARRIOR1 : ImageContainer.MERCHANT1}"
				 right="5"/>
		
		<s:Image source="{ImageContainer.LEFT_ARROW}" click="{goLeft(unitDataViewStack)}" left="10" top="30"
				 visible="{unit.ownerStatus == Unit.PLAYER || unit.ownerStatus == Unit.ALLY}"/>
		<s:Image source="{ImageContainer.RIGHT_ARROW}" click="{goRight(unitDataViewStack)}" right="10" top="30"
				 visible="{unit.ownerStatus == Unit.PLAYER || unit.ownerStatus == Unit.ALLY}"/>
		
		<components:UnitDataViewsStack
			id="unitDataViewStack"
			top="30"
			height="30"
			width="100%"
			visible="{unit.ownerStatus == Unit.PLAYER || unit.ownerStatus == Unit.ALLY}"/>
			
		<s:Image source="{ImageContainer.LEFT_ARROW}" click="{goLeft(actionsViewStack)}" left="10" top="65"
				 visible="{nbActionsAvailable &gt; 1}"/>
		<s:Image source="{ImageContainer.RIGHT_ARROW}" click="{goRight(actionsViewStack)}" right="10" top="65"
				 visible="{nbActionsAvailable &gt; 1}"/>
		
		<mx:ViewStack id="actionsViewStack" 
					  top="65"
					  height="30"
					  width="100%"
					  visible="{unit.ownerStatus == Unit.PLAYER}">
			
			<s:NavigatorContent width="100%" showEffect="{unfade}" hideEffect="{fade}">
				<s:VGroup verticalAlign="middle" 
						  horizontalAlign="center" 
						  width="100%">
					
					<s:Button label="{Translations.MOVE.getItemAt(Session.LANGUAGE)}"
							  skinClass="{CustomButtonSkin}"
							  click="moveUnit()"/>

					<s:Label text="{Translations.WAY_SELECTION.getItemAt(Session.LANGUAGE)}"/>

					<s:Button label="{Translations.VALIDATE.getItemAt(Session.LANGUAGE)}" 
							  click="{validateMoves()}" 
							  skinClass="com.uralys.tribes.skins.CustomButtonSkin"/>
					
					<s:Button label="{Translations.CANCEL.getItemAt(Session.LANGUAGE)}" 
							  click="{cancel()}" 
							  skinClass="com.uralys.tribes.skins.CustomButtonSkin"/>
					
					<s:Button label="{Translations.DELETE_LAST_MOVE.getItemAt(Session.LANGUAGE)}" 
							  click="{UnitMover.getInstance().deleteLastMove()}"
							  enabled="{Session.REMOVING_MOVES_ENABLE &amp;&amp; unit != null &amp;&amp; unit.moves.length &gt; 2}" 
							  skinClass="com.uralys.tribes.skins.CustomButtonSkin"/>
					
					<mx:ProgressBar id="movingProgressBar"
									width="80%"
									height="20"
									mode="manual"
									barSkin="{WorkersProgressBarSkin}"
									trackSkin="{WorkersProgressTrackSkin}"
									label="" 
									labelPlacement="bottom"
									includeIn="moving"/>
				</s:VGroup>
				
				
				
			</s:NavigatorContent>
			
			<s:NavigatorContent width="100%" showEffect="{unfade}" hideEffect="{fade}">
				<s:HGroup verticalAlign="middle" 
						  horizontalAlign="center" 
						  width="100%">
					
					<s:Button label="{Translations.SHOOT.getItemAt(Session.LANGUAGE)}"
							  includeIn="shotEnabled"
							  skinClass="{CustomButtonSkin}"
							  click="shoot()"/>
					
					<mx:ProgressBar id="shootProgressBar"
									width="80%"
									height="20"
									mode="manual"
									barSkin="{WorkersProgressBarSkin}"
									trackSkin="{WorkersProgressTrackSkin}"
									label="" 
									labelPlacement="bottom"
									includeIn="reloading"/>
				</s:HGroup>
			</s:NavigatorContent>

			<s:NavigatorContent width="100%" showEffect="{unfade}" hideEffect="{fade}">
				<s:HGroup verticalAlign="middle" 
						  horizontalAlign="center" 
						  width="100%">
					
					<s:VGroup id="buildCityForm"
							  top="150" right="95"
							  includeIn="buildCityEnabled">
						<s:Button label="{Translations.BUILD_HERE.getItemAt(Session.LANGUAGE)}" click="buildCity()" skinClass="com.uralys.tribes.skins.CustomButtonSkin"/>
					</s:VGroup>
					
				</s:HGroup>
			</s:NavigatorContent>
		</mx:ViewStack>
		

	</s:Group>
	
</s:Group>
