<?xml version="1.0" encoding="utf-8"?>
<windows:ResizableTitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:windows="com.uralys.tribes.windows.*"
			   xmlns:renderers="com.uralys.tribes.renderers.*"
			   skinClass="com.uralys.tribes.skins.WindowSkin"
			   close="{closeWindow(true)}"
			   creationComplete="init()"
			   width="800"
			   height="620"
			   backgroundAlpha="0.7"
			   backgroundColor="#000000"
			   cornerRadius="15" >
	<fx:Script>
		<![CDATA[
			import com.uralys.tribes.main.ImageContainer;
			
			//-----------------------------------------------------------------//
			
			import com.uralys.tribes.commons.Session;
			import com.uralys.tribes.commons.Translations;
			import com.uralys.tribes.entities.Ally;
			import com.uralys.tribes.entities.Message;
			import com.uralys.tribes.managers.GameManager;
			import com.uralys.tribes.pages.Board;
			import com.uralys.utils.Utils;
			
			import mx.collections.ArrayCollection;
			import mx.core.FlexGlobals;
			import mx.managers.PopUpManager;

			//-----------------------------------------------------------------//

			var messageToMarkAsReadUIDs:ArrayCollection = new ArrayCollection();
			var messageToDeleteUIDs:ArrayCollection = new ArrayCollection();
			var messageToArchiveUIDs:ArrayCollection = new ArrayCollection();
			
			//-----------------------------------------------------------------//

			public function closeWindow(manageMessages:Boolean = false):void
			{
				PopUpManager.removePopUp(this);
				if(!manageMessages)
					return;
				
				//---------------------------//
				
				var messagesToRemoveFromNews:ArrayCollection = new ArrayCollection();
				
				for each(var message:Message in Session.player.newMessages)
				{
					if(message.status == Message.READ){
						Session.player.readMessages.addItem(message);
						messagesToRemoveFromNews.addItem(message);
						messageToMarkAsReadUIDs.addItem(message.messageUID);
					}
				}
				
				for each(var messageToRemoveFromNews:Message in messagesToRemoveFromNews){
					Session.player.newMessages.removeItemAt(Session.player.newMessages.getItemIndex(messageToRemoveFromNews));
				}

				//---------------------------//

				if(messageToMarkAsReadUIDs.length > 0)
					GameManager.getInstance().markAsRead(messageToMarkAsReadUIDs);
				
				if(messageToArchiveUIDs.length > 0)
					GameManager.getInstance().archiveMessages(messageToArchiveUIDs);
				
				if(messageToDeleteUIDs.length > 0)
					GameManager.getInstance().deleteMessages(messageToDeleteUIDs);

			}
			
			//-----------------------------------------------------------------//
			
			public function init():void{
				if(Session.player.ally != null)
					deleteAllAllyInvitations();
			}

			public function refresh():void
			{
				//GameManager.getInstance().sendMessage(message.text);
			}

			//-----------------------------------------------------------------//

			private function deleteAllAllyInvitations():void
			{
				//---------//

				var newMessagesToDelete:ArrayCollection = new ArrayCollection();
				for each(var newMessage:Message in Session.player.newMessages){
					if(Utils.isInviteMessage(newMessage))
						newMessagesToDelete.addItem(newMessage);
				}

				for each(var newMessageToDelete:Message in newMessagesToDelete)
					deleteNewMessage(newMessageToDelete);				
				
				//---------//

				var readMessagesToDelete:ArrayCollection = new ArrayCollection();
				for each(var readMessage:Message in Session.player.readMessages){
					if(Utils.isInviteMessage(readMessage))
						readMessagesToDelete.addItem(readMessage);
				}
				
				for each(var readMessageToDelete:Message in readMessagesToDelete)
					deleteReadMessage(readMessageToDelete);				
				
				//---------//

				var archivedMessagesToDelete:ArrayCollection = new ArrayCollection();
				for each(var archivedMessage:Message in Session.player.archivedMessages){
					if(Utils.isInviteMessage(archivedMessage))
						archivedMessagesToDelete.addItem(archivedMessage);
				}
				
				for each(var archivedMessageToDelete:Message in archivedMessagesToDelete)
					deleteArchivedMessage(archivedMessageToDelete);				
				
				//---------//
			}

			//-----------------------------------------------------------------//
			
			private function deleteNewMessage(message:Message):void
			{
				message.status = Message.DELETED;

				messageToDeleteUIDs.addItem(message.messageUID);
				Session.player.newMessages.removeItemAt(Session.player.newMessages.getItemIndex(message));
				
				newMessagesList.selectedItem = null;
			}

			private function deleteNewMessageFromList():void{
				deleteNewMessage(newMessagesList.selectedItem as Message);
			}

			//-----------------------------------------------------------------//

			private function deleteReadMessage(message:Message):void{
				message.status = Message.DELETED;
				
				messageToDeleteUIDs.addItem(message.messageUID);
				Session.player.readMessages.removeItemAt(Session.player.readMessages.getItemIndex(message));
				
				readMessagesList.selectedItem = null;
			}
			
			private function deleteReadMessageFromList():void{
				deleteReadMessage(readMessagesList.selectedItem as Message);
			}
			
			//-----------------------------------------------------------------//

			private function deleteArchivedMessage(message:Message):void{
				message.status = Message.DELETED;
				
				messageToDeleteUIDs.addItem(message.messageUID);
				Session.player.archivedMessages.removeItemAt(Session.player.archivedMessages.getItemIndex(message));
				
				archivedMessagesList.selectedItem = null;
			}
			
			private function deleteArchivedMessageFromList():void{
				deleteArchivedMessage(archivedMessagesList.selectedItem as Message);
			}
			
			//-----------------------------------------------------------------//

			private function archiveReadMessage():void
			{
				if(Session.player.archivedMessages.length == 20){
					FlexGlobals.topLevelApplication.message(Translations.MAX_ARCHIVE.getItemAt(Session.LANGUAGE) as String);
					return;
				}
				
				(readMessagesList.selectedItem as Message).status = Message.ARCHIVED;
				
				messageToArchiveUIDs.addItem((readMessagesList.selectedItem as Message).messageUID);
				Session.player.archivedMessages.addItem(readMessagesList.selectedItem as Message);
				Session.player.readMessages.removeItemAt(Session.player.readMessages.getItemIndex((readMessagesList.selectedItem as Message)));
				
				readMessagesList.selectedItem = null;
			}
			
			//-----------------------------------------------------------------//
			
			private function acceptAllyInvitation(ally:Ally):void
			{
				GameManager.getInstance().joinAlly(ally.allyUID);
				deleteAllAllyInvitations();
				
				Session.player.ally = ally;
			}
			
		]]>
	</fx:Script>
	
	<s:Group width="100%" height="100%">
		
		
		<s:VGroup horizontalAlign="center" top="5" width="100%">
			<mx:SWFLoader source="{ImageContainer.LOADING}" 
						  visible="{Session.WAIT_FOR_SERVER}"/>
			<s:TabBar id="tabs" dataProvider="{viewstack}"
					  skinClass="com.uralys.tribes.skins.CustomTabBarSkin"/>
		</s:VGroup>
		
		<mx:ViewStack id="viewstack" 
					  width="100%" height="100%"
					  paddingTop="55"
					  paddingLeft="15"
					  paddingRight="15"
					  paddingBottom="15"
					  >
			
			<s:NavigatorContent label="{Translations.UNREAD.getItemAt(Session.LANGUAGE)} ({Session.player.newMessages.length})">
				<s:HGroup width="100%" height="100%"
						  horizontalAlign="center"
						  verticalAlign="middle">
					<s:List dataProvider="{Session.player.newMessages}"
							id="newMessagesList"
							height="400"
							width="30%"
							selectionColor="#000101"
							rollOverColor="#000101"
							visible="{Session.player.newMessages.length &gt; 0}"
							itemRenderer="com.uralys.tribes.renderers.MessageRenderer"
							skinClass="com.uralys.tribes.skins.CustomListSkin"/>
					<s:VGroup width="70%" height="70%"
							  horizontalAlign="center"
							  paddingTop="5">
						<renderers:MessageContentRenderer message="{newMessagesList.selectedItem as Message}"
														  visible="{newMessagesList.selectedItem != null}"
														  accept="{acceptAllyInvitation}"
														  refuse="{deleteNewMessageFromList}"/>
					</s:VGroup>
				</s:HGroup>
			</s:NavigatorContent>
			<s:NavigatorContent label="{Translations.READ.getItemAt(Session.LANGUAGE)} ({Session.player.readMessages.length})">
				<s:HGroup width="100%" height="100%"
						  horizontalAlign="center"
						  verticalAlign="middle">
					<s:List dataProvider="{Session.player.readMessages}"
							id="readMessagesList"
							height="400"
							width="30%"
							selectionColor="#000101"
							rollOverColor="#000101"
							itemRenderer="com.uralys.tribes.renderers.MessageRenderer"
							visible="{Session.player.readMessages.length &gt; 0}"
							skinClass="com.uralys.tribes.skins.CustomListSkin"/>
					<s:VGroup width="70%" height="90%"
							  horizontalAlign="center"
							  paddingTop="5"
							  contentBackgroundAlpha="0">
						
						<renderers:MessageContentRenderer message="{readMessagesList.selectedItem as Message}"
														  visible="{readMessagesList.selectedItem != null}"
														  accept="{acceptAllyInvitation}"
														  refuse="{deleteReadMessageFromList}"
														  height="70%"/>
						
						<s:Spacer height="100%"/>
						<s:HGroup width="100%" visible="{readMessagesList.selectedItem != null}">
							<s:Button skinClass="com.uralys.tribes.skins.CustomButtonSkin" 
									  label="{Translations.ARCHIVE.getItemAt(Session.LANGUAGE)}"
									  click="archiveReadMessage()"/>
							<s:Spacer width="100%"/>
							<s:Button skinClass="com.uralys.tribes.skins.CustomButtonSkin"
									  label="{Translations.DELETE.getItemAt(Session.LANGUAGE)}"
									  click="deleteReadMessageFromList()"/>
						</s:HGroup>
					</s:VGroup>
					
				</s:HGroup>
			</s:NavigatorContent>
			<s:NavigatorContent label="{Translations.ARCHIVES.getItemAt(Session.LANGUAGE)} ({Session.player.archivedMessages.length})">
				<s:HGroup width="100%" height="100%"
						  horizontalAlign="center"
						  verticalAlign="middle">
					<s:List dataProvider="{Session.player.archivedMessages}"
							id="archivedMessagesList"
							height="400"
							width="30%"
							selectionColor="#000101"
							rollOverColor="#000101"
							itemRenderer="com.uralys.tribes.renderers.MessageRenderer"
							visible="{Session.player.archivedMessages.length &gt; 0}"
							skinClass="com.uralys.tribes.skins.CustomListSkin"/>
					<s:VGroup width="70%" height="70%"
							  horizontalAlign="center"
							  paddingTop="5"
							  contentBackgroundAlpha="0">
						
						<renderers:MessageContentRenderer message="{archivedMessagesList.selectedItem as Message}"
														  visible="{archivedMessagesList.selectedItem != null}"
														  accept="{acceptAllyInvitation}"
														  refuse="{deleteArchivedMessageFromList}"/>
						
						<s:Spacer height="100%"/>
						<s:HGroup width="100%" visible="{archivedMessagesList.selectedItem != null}">
							<s:Spacer width="100%"/>
							<s:Button skinClass="com.uralys.tribes.skins.CustomButtonSkin"
									  label="{Translations.DELETE.getItemAt(Session.LANGUAGE)}"
									  click="deleteArchivedMessageFromList()"/>
						</s:HGroup>
					</s:VGroup>
				</s:HGroup>
			</s:NavigatorContent>
		</mx:ViewStack>
	</s:Group>
	
</windows:ResizableTitleWindow>
