<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:flex="http://www.springframework.org/schema/flex" 
		xmlns:security="http://www.springframework.org/schema/security"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
        xsi:schemaLocation="
                http://www.springframework.org/schema/beans
                http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                http://www.springframework.org/schema/flex
                http://www.springframework.org/schema/flex/spring-flex-1.0.xsd
                http://www.springframework.org/schema/context
                http://www.springframework.org/schema/context/spring-context-2.5.xsd
                http://www.springframework.org/schema/security
                http://www.springframework.org/schema/security/spring-security-2.0.4.xsd">
        	   
       	<!-- Hi, usually you don't use both secured-annotations and jsr250-annotations attributes.
			 You have to choose between them.
			 secured-annotations -> @Secured
			 jsr250-annotations -> @RolesAllowed
			
	        <security:global-method-security secured-annotations="enabled" jsr250-annotations="enabled"/>
	        <security:global-method-security secured-annotations="enabled"/>
       	 -->
                
        <flex:message-broker>
               <flex:message-service
                        default-channels="my-streaming-amf,my-longpolling-amf,my-polling-amf" />
               <!-- [RPC Fault faultString="An Authentication object was not found in the SecurityContext" faultCode="Client.Authentication" faultDetail="null"]
               		Happens after inactivity...
               		so everything about security is removed for this version
               		<flex:secured per-client-authentication="true" /> -->
               <!-- <flex:secured/> -->
        </flex:message-broker>
        
        <flex:remoting-destination destination-id="PlayerWrapper" ref="playerServiceBean" />

</beans>