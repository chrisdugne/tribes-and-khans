<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				autoDrawBackground="true"
				useHandCursor="true"
				buttonMode="true"
				click="onClick(event)">
	
	<s:states>
		<s:State name="normal" />
		<s:State name="hovered" />
		<s:State name="selected" />
	</s:states>
	
	<fx:Script>
		<![CDATA[
			import com.uralys.tribes.commons.Numbers;
			
			import mx.events.ItemClickEvent;
			
			[Bindable] private var color:Number = 0x1111ee;
			[Bindable] private var colorHovered:Number = 0x1111ee;
			[Bindable] private var colorSelected:Number = 0x2211cc;
			
			private function onClick(event:MouseEvent):void{
				
				var e:ItemClickEvent = new ItemClickEvent(ItemClickEvent.ITEM_CLICK, true);
				
				e.item = data;
				e.index = itemIndex;
				
				dispatchEvent(e);
			}
			
		]]>
	</fx:Script>
	
	<s:transitions>
		<mx:Transition fromState="*" toState="hovered">
			<s:Animate target="{groupDetails}" duration="200">
				<s:SimpleMotionPath property="width" />
			</s:Animate>
		</mx:Transition>
		<mx:Transition fromState="hovered" toState="*">
			<s:Animate target="{groupDetails}" duration="200" >
				<s:SimpleMotionPath property="width" />
			</s:Animate>
		</mx:Transition>
		<mx:Transition fromState="selected" toState="*">
			<s:Animate target="{groupDetails}" duration="200" >
				<s:SimpleMotionPath property="width" />
			</s:Animate>
		</mx:Transition>
	</s:transitions>
	
	<s:Group id="groupDetails" height="20" width="180" width.hovered="210" width.selected="210">
		<s:Rect left="0" right="0" top="0" bottom="0" radiusX="5" radiusY="5">
			<s:fill>
				<s:SolidColor color="{data.wheat + data.wheatEarned - data.wheatSpent &lt; 0 ? Numbers.RED : color}" 
							  color.hovered="{data.wheat + data.wheatEarned - data.wheatSpent &lt; 0 ? Numbers.RED : colorHovered}" 
							  color.selected="{data.wheat + data.wheatEarned - data.wheatSpent &lt; 0 ? Numbers.RED : colorSelected}" />
			</s:fill>
		</s:Rect>
		<s:Label id="labelName" 
				 color="#FFFFFF" 
				 left="10" 
				 verticalCenter="2"
				 text="{data.name}"/>
		<s:Label id="labelFamine" 
				 color="#FFFFFF" 
				 right="5" 
				 verticalCenter="2"
				 text="Famine !"
				 visible="{data.wheat + data.wheatEarned - data.wheatSpent &lt; 0}"/>
	</s:Group>
	
</s:ItemRenderer>
